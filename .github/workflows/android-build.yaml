name: android-build

on:
  push:
    tags:
      - '*'

jobs:
  android-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Wait for tests to succeed
        uses: lewagon/wait-on-check-action@v1.3.3
        with:
          ref: ${{ github.ref }}
          running-workflow-name: android-build
          check-name: android-unit-test-release
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Prepare secret files
        run: |
          echo "${{ secrets.KEYSTORE }}" > appstore.keystore.asc
          gpg -d --passphrase "${{ secrets.KEYSTORE_PASSPHRASE }}" --batch appstore.keystore.asc > app/appstore.keystore
          echo "${{ secrets.KEYSTORE_PROPERTIES }}" > keystore.properties.asc
          gpg -d --passphrase "${{ secrets.KEYSTORE_PROPERTIES_PASSPHRASE }}" --batch keystore.properties.asc > app/.config/keystore.properties
          echo "${{ secrets.SECRETS_PROPERTIES }}" > secrets.properties.asc
          gpg -d --passphrase "${{ secrets.SECRETS_PROPERTIES_PASSPHRASE }}" --batch secrets.properties.asc > app/.config/secrets.properties
          echo "${{ secrets.GOOGLE_SERVICES }}" > google-services.json.asc
          gpg -d --passphrase "${{ secrets.GOOGLE_SERVICES_PASSPHRASE }}" --batch google-services.json.asc > app/google-services.json
      - name: Fetch tags
        run: git fetch --tags --force
      - name: Build release APKs
        run: ./gradlew clean assembleRelease
      - name: Publish PlayStore APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: app/build/outputs/apk/app/release
      - name: Publish Github APK
        uses: actions/upload-artifact@v3
        with:
          name: app-github-release
          path: app/build/outputs/apk/github/release
      - uses: ericcornelissen/git-tag-annotation-action@v2
        id: tag_data
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          title: "${{ steps.tag_data.outputs.git-tag-annotation }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            app/build/outputs/apk/**/release/*.apk
            app/build/outputs/apk/**/release/*.json
