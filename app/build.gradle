apply plugin: 'com.android.application'
apply plugin: 'io.objectbox'
apply plugin: 'io.fabric'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    defaultConfig {
        applicationId "com.mxt.anitrend"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "anitrend_v${defaultConfig.versionName}_rc_${defaultConfig.versionCode}.apk"
                }
            }
        }
        buildTypes.each {
            it.buildConfigField("String", "API_KEY", API_KEY)
            it.buildConfigField("String", "CLIENT_ID", CLIENT_ID)
            it.buildConfigField("String", "CLIENT_SECRET", CLIENT_SECRET)
            it.buildConfigField("String", "HEADER_KEY", HEADER_KEY)
            it.buildConfigField("String", "REDIRECT_URI", REDIRECT_URI)
            it.buildConfigField("String", "RESPONSE_TYPE", RESPONSE_TYPE)
            it.buildConfigField("String", "REGISTER_URL", REGISTER_URL)
            it.buildConfigField("String", "API_LINK", API_LINK)
            it.buildConfigField("String", "CRUNCHY_LINK", CRUNCHY_LINK)
            it.buildConfigField("String", "FEEDS_LINK", FEEDS_LINK)
            it.buildConfigField("String", "APP_REPO", APP_REPO)
            it.buildConfigField("String", "GIPHY_LINK", GIPHY_LINK)
            it.buildConfigField("String", "GIPHY_KEY", GIPHY_KEY)
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        jumboMode true
    }
}

configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    /** Architecture Components */
    compile "android.arch.lifecycle:extensions:${versions.architecture}"

    /** Android Support Libraries */
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile "com.android.support:appcompat-v7:${versions.supportLibrary}"
    compile "com.android.support:support-v4:${versions.supportLibrary}"
    compile "com.android.support:design:${versions.supportLibrary}"
    compile "com.android.support:cardview-v7:${versions.supportLibrary}"
    compile "com.android.support:support-vector-drawable:${versions.supportLibrary}"

    /** Fire-base Libraries */
    compile "com.google.firebase:firebase-core:${versions.firebase}"
    compile 'com.firebase:firebase-jobdispatcher:0.8.5'

    /** Crash Analytics */
    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }

    /** Retrofit Libraries */
    compile "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    compile "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    compile("com.squareup.retrofit2:converter-simplexml:${versions.retrofit}") {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }
    compile "com.squareup.okhttp3:logging-interceptor:3.9.0"

    /** Glide Libraries */
    compile "com.github.bumptech.glide:glide:${versions.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${versions.glide}"

    /** Butter Knife Libraries */
    compile "com.jakewharton:butterknife:${versions.butterKnife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${versions.butterKnife}"

    /** State Layout Library */
    compile 'com.github.nguyenhoanglam:ProgressLayout:1.0.1'

    /** Event Bus Library */
    compile 'org.greenrobot:eventbus:3.1.1'

    /** Material Dialogs Library*/
    compile 'com.afollestad.material-dialogs:core:0.9.6.0'

    /** Material Search View */
    compile 'com.miguelcatalan:materialsearchview:1.4.0'

    /** Object Box */
    compile "io.objectbox:objectbox-android:${versions.objectBox}"
    annotationProcessor "io.objectbox:objectbox-processor:${versions.objectBox}"

    /** Emojify */
    compile "com.github.wax911:android-emojify:${versions.emojify}"

    /** Pretty Time */
    compile 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'

    /** Smart Tab Layout */
    compile 'com.ogaclejapan.smarttablayout:library:1.6.1@aar'

    /** Java Streams Port */
    compile 'com.annimon:stream:1.1.9'

    /** Highly Customizable Video Player */
    compile 'cn.jzvd:jiaozivideoplayer:6.2.7'

    /** Photo View */
    compile 'com.github.chrisbanes:PhotoView:2.1.3'

    /** Reveal Animation */
    compile 'com.github.XunMengWinter:CircularAnim:0.3.4'

    /** Alerter */
    compile 'com.tapadoo.android:alerter:2.0.4'

    /** Rich Text Markdown Parser */
    compile 'com.zzhoujay.richtext:richtext:3.0.5'

    /** Tap Target Prompt */
    compile 'uk.co.samuelwall:material-tap-target-prompt:2.7.0'

    /** Circular Progress View */
    compile 'com.github.rahatarmanahmed:circularprogressview:2.5.0'

    /** On-boarding Experience */
    compile 'com.codemybrainsout.onboarding:onboarder:1.0.4'

    /** Charts */
    compile'com.github.PhilJay:MPAndroidChart:v3.0.3'

    /** About Library */
    compile 'com.github.medyo:android-about-page:1.2.2'

    testCompile 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'
